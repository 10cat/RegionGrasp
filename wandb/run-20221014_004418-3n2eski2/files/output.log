
[Function: __init__ start...]
[Function: __init__ finished, spent time: 2.41138411s]
[Function: __init__ start...]
[Function: __init__ finished, spent time: 0.60644078s]
train epoch:1:   0%|                                                      | 0/10114 [00:00<?, ?it/s]
Traceback (most recent call last):
  File "traineval.py", line 65, in <module>
    train_val()
  File "traineval.py", line 33, in train_val
    checkpoints, _ = trainer.epoch(epoch + 1, best_val=best_val)
  File "/home/datassd/yilin/Codes/Hand/ConditionHOI/epochbase.py", line 353, in epoch
    self.one_batch(sample, idx)
  File "/home/datassd/yilin/Codes/Hand/ConditionHOI/epochbase.py", line 300, in one_batch
    if idx == 0: self.visual(rhand_vs_pred, data_elements, sample_ids=sample['sample_idx'], batch_id=idx)
  File "/home/datassd/yilin/Codes/Hand/ConditionHOI/epochbase.py", line 236, in visual
    makepath(output_mesh_folder)
  File "/home/datassd/yilin/Codes/Hand/ConditionHOI/utils/utils.py", line 62, in makepath
    if not os.path.exists(desired_path): os.makedirs(desired_path)
  File "/home/yilin/anaconda3/envs/pytorch3d/lib/python3.8/os.py", line 223, in makedirs
    mkdir(name, mode)
OSError: [Errno 36] File name too long: '/home/datassd/yilin/Outputs/ConditionHOI/cgrasp_1/train_meshes/batch_0/epoch_<bound method Epoch.epoch of TrainEpoch(\n  (ConditionNet): ConditionNet(\n    (obj_encoder): PointNetEncoder(\n      (stn): STN3d(\n        (conv1): Conv1d(3, 64, kernel_size=(1,), stride=(1,))\n        (conv2): Conv1d(64, 128, kernel_size=(1,), stride=(1,))\n        (conv3): Conv1d(128, 1024, kernel_size=(1,), stride=(1,))\n        (fc1): Linear(in_features=1024, out_features=512, bias=True)\n        (fc2): Linear(in_features=512, out_features=256, bias=True)\n        (fc3): Linear(in_features=256, out_features=9, bias=True)\n        (relu): ReLU()\n        (bn1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (bn2): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (bn3): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (bn4): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (bn5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n      (conv1): Conv1d(3, 64, kernel_size=(1,), stride=(1,))\n      (conv2): Conv1d(64, 128, kernel_size=(1,), stride=(1,))\n      (conv3): Conv1d(128, 1024, kernel_size=(1,), stride=(1,))\n      (bn1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (bn2): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (bn3): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    )\n    (obj_masked_encoder): PointNetEncoder(\n      (stn): STN3d(\n        (conv1): Conv1d(3, 64, kernel_size=(1,), stride=(1,))\n        (conv2): Conv1d(64, 128, kernel_size=(1,), stride=(1,))\n        (conv3): Conv1d(128, 1024, kernel_size=(1,), stride=(1,))\n        (fc1): Linear(in_features=1024, out_features=512, bias=True)\n        (fc2): Linear(in_features=512, out_features=256, bias=True)\n        (fc3): Linear(in_features=256, out_features=9, bias=True)\n        (relu): ReLU()\n        (bn1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (bn2): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (bn3): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (bn4): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (bn5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n      (conv1): Conv1d(3, 64, kernel_size=(1,), stride=(1,))\n      (conv2): Conv1d(64, 128, kernel_size=(1,), stride=(1,))\n      (conv3): Conv1d(128, 1024, kernel_size=(1,), stride=(1,))\n      (bn1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (bn2): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (bn3): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    )\n    (hand_encoder): PointNetEncoder(\n      (stn): STN3d(\n        (conv1): Conv1d(3, 64, kernel_size=(1,), stride=(1,))\n        (conv2): Conv1d(64, 128, kernel_size=(1,), stride=(1,))\n        (conv3): Conv1d(128, 1024, kernel_size=(1,), stride=(1,))\n        (fc1): Linear(in_features=1024, out_features=512, bias=True)\n        (fc2): Linear(in_features=512, out_features=256, bias=True)\n        (fc3): Linear(in_features=256, out_features=9, bias=True)\n        (relu): ReLU()\n        (bn1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (bn2): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (bn3): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (bn4): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (bn5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n      (conv1): Conv1d(3, 64, kernel_size=(1,), stride=(1,))\n      (conv2): Conv1d(64, 128, kernel_size=(1,), stride=(1,))\n      (conv3): Conv1d(128, 1024, kernel_size=(1,), stride=(1,))\n      (bn1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (bn2): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (bn3): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    )\n    (mapnet): SDmapNet(\n      (conv1): Conv1d(1088, 512, kernel_size=(1,), stride=(1,))\n      (conv2): Conv1d(512, 256, kernel_size=(1,), stride=(1,))\n      (conv3): Conv1d(256, 128, kernel_size=(1,), stride=(1,))\n      (conv4): Conv1d(128, 1, kernel_size=(1,), stride=(1,))\n      (bn1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (bn2): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (bn3): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (activate): LeakyReLU(negative_slope=1)\n    )\n    (convfuse): Conv1d(3778, 3000, kernel_size=(1,), stride=(1,))\n    (convfuse_m1): Conv1d(6000, 3000, kernel_size=(1,), stride=(1,))\n    (bnfuse): BatchNorm1d(3000, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (bnfuse_m1): BatchNorm1d(3000, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n  )\n  (cGraspVAE): cGraspvae(\n    (hand_encoder): PointNetEncoder(\n      (stn): STN3d(\n        (conv1): Conv1d(3, 64, kernel_size=(1,), stride=(1,))\n        (conv2): Conv1d(64, 128, kernel_size=(1,), stride=(1,))\n        (conv3): Conv1d(128, 1024, kernel_size=(1,), stride=(1,))\n        (fc1): Linear(in_features=1024, out_features=512, bias=True)\n        (fc2): Linear(in_features=512, out_features=256, bias=True)\n        (fc3): Linear(in_features=256, out_features=9, bias=True)\n        (relu): ReLU()\n        (bn1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (bn2): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (bn3): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (bn4): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (bn5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n      (conv1): Conv1d(3, 64, kernel_size=(1,), stride=(1,))\n      (conv2): Conv1d(64, 128, kernel_size=(1,), stride=(1,))\n      (conv3): Conv1d(128, 1024, kernel_size=(1,), stride=(1,))\n      (bn1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (bn2): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (bn3): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    )\n    (obj_rc_encoder): ObjRegionConditionEncoder(\n      (stn): STN3d(\n        (conv1): Conv1d(3, 64, kernel_size=(1,), stride=(1,))\n        (conv2): Conv1d(64, 128, kernel_size=(1,), stride=(1,))\n        (conv3): Conv1d(128, 1024, kernel_size=(1,), stride=(1,))\n        (fc1): Linear(in_features=1024, out_features=512, bias=True)\n        (fc2): Linear(in_features=512, out_features=256, bias=True)\n        (fc3): Linear(in_features=256, out_features=9, bias=True)\n        (relu): ReLU()\n        (bn1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (bn2): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (bn3): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (bn4): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (bn5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      )\n      (conv1): Conv1d(3, 64, kernel_size=(1,), stride=(1,))\n      (conv2): Conv1d(64, 128, kernel_size=(1,), stride=(1,))\n      (conv3): Conv1d(128, 1024, kernel_size=(1,), stride=(1,))\n      (bn1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (bn2): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (bn3): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (conv2_m): Conv1d(64, 128, kernel_size=(1,), stride=(1,))\n      (conv3_m): Conv1d(128, 1024, kernel_size=(1,), stride=(1,))\n      (bn2_m): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (bn3_m): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n      (convfuse): Conv1d(2048, 1024, kernel_size=(1,), stride=(1,))\n      (bnfuse): BatchNorm1d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    )\n    (cvae): VAE(\n      (encoder): Encoder(\n        (MLP): Sequential(\n          (L0): Linear(in_features=2048, out_features=512, bias=True)\n          (A0): ReLU()\n          (L1): Linear(in_features=512, out_features=256, bias=True)\n          (A1): ReLU()\n        )\n        (linear_means): Linear(in_features=256, out_features=64, bias=True)\n        (linear_log_var): Linear(in_features=256, out_features=64, bias=True)\n      )\n      (decoder): Decoder(\n        (MLP): Sequential(\n          (L0): Linear(in_features=1088, out_features=1024, bias=True)\n          (A0): ReLU()\n          (L1): Linear(in_features=1024, out_features=256, bias=True)\n          (A1): ReLU()\n        )\n        (dec_pose): Linear(in_features=256, out_features=96, bias=True)\n        (dec_trans): Linear(in_features=256, out_features=3, bias=True)\n      )\n    )\n  )\n  (rh_model): MANO(\n    Number of betas: 10\n    Flat hand mean: True\n  )\n  (ConditionNetLoss): ConditionNetLoss(\n    (maploss_hand): L1Loss()\n    (maploss_om): L1Loss()\n    (featloss): MSELoss()\n  )\n  (cGraspVAELoss): cGraspvaeLoss(\n    (rh_model): MANO(\n      Number of betas: 10\n      Flat hand mean: True\n    )\n    (LossL1): L1Loss()\n  )\n  (ConditionNetMetrics): ConditionNetMetrics(\n    (maploss): L1Loss()\n  )\n  (cGraspvaeMetrics): cGraspvaeMetrics(\n    (rh_model): MANO(\n      Number of betas: 10\n      Flat hand mean: True\n    )\n  )\n)>'