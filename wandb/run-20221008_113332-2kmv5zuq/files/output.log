
[Function: __init__ start...]
[Function: __init__ finished, spent time: 2.41811013s]
[Function: __init__ start...]
[Function: __init__ finished, spent time: 0.60218000s]
[Function: __init__ start...]
[Function: __init__ finished, spent time: 0.82334208s]
train epoch:1:   0%|                                                                                                                                                                  | 0/20227 [00:00<?, ?it/s]
Traceback (most recent call last):
  File "traineval.py", line 60, in <module>
    train_val(trainloader, valloader, testloader)
  File "traineval.py", line 22, in train_val
    trainer.epoch(epoch + 1)
  File "/home/datassd/yilin/Codes/Hand/ConditionHOI/epochbase.py", line 215, in epoch
    for idx, sample in enumerate(tqdm(self.dataloader, desc=f'{self.mode} epoch:{epoch}')):
  File "/home/yilin/anaconda3/envs/pytorch3d/lib/python3.8/site-packages/tqdm/std.py", line 1195, in __iter__
    for obj in iterable:
  File "/home/yilin/anaconda3/envs/pytorch3d/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 521, in __next__
    data = self._next_data()
  File "/home/yilin/anaconda3/envs/pytorch3d/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 561, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/home/yilin/anaconda3/envs/pytorch3d/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 47, in fetch
    return self.collate_fn(data)
  File "/home/yilin/anaconda3/envs/pytorch3d/lib/python3.8/site-packages/torch/utils/data/_utils/collate.py", line 74, in default_collate
    return {key: default_collate([d[key] for d in batch]) for key in elem}
  File "/home/yilin/anaconda3/envs/pytorch3d/lib/python3.8/site-packages/torch/utils/data/_utils/collate.py", line 74, in <dictcomp>
    return {key: default_collate([d[key] for d in batch]) for key in elem}
  File "/home/yilin/anaconda3/envs/pytorch3d/lib/python3.8/site-packages/torch/utils/data/_utils/collate.py", line 86, in default_collate
    raise TypeError(default_collate_err_msg_format.format(elem_type))
TypeError: default_collate: batch must contain tensors, numpy arrays, numbers, dicts or lists; found <class 'trimesh.caching.TrackedArray'>